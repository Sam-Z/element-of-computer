// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
     DMux8Way(in = true, sel=address, a=a1, b=b1, c=c1, d=d1, e=e1, f=f1, g=g1, h=h1);
     And(a=a1, b=load, out=load1);
     Register(in = in, load=load1, out=out1);
     
     And(a=b1, b=load, out=load2);
     Register(in = in, load=load2, out=out2);
     
     And(a=c1, b=load, out=load3);
     Register(in = in, load=load3, out=out3);
     
     And(a=d1, b=load, out=load4);
     Register(in = in, load=load4, out=out4);
     
     And(a=e1, b=load, out=load5);
     Register(in = in, load=load5, out=out5);
     
     And(a=f1, b=load, out=load6);
     Register(in = in, load=load6, out=out6);
     
     And(a=g1, b=load, out=load7);
     Register(in = in, load=load7, out=out7);
     
     And(a=h1, b=load, out=load8);
     Register(in = in, load=load8, out=out8);
     
     
     Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address, out=out);
     
 }  