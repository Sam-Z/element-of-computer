// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in = true, sel=address[3..5], a=a1, b=b1, c=c1, d=d1, e=e1, f=f1, g=g1, h=h1);
    And(a=load, b=a1, out=a2);
    And(a=load, b=b1, out=b2);
    And(a=load, b=c1, out=c2);
    And(a=load, b=d1, out=d2);
    And(a=load, b=e1, out=e2);
    And(a=load, b=f1, out=f2);
    And(a=load, b=g1, out=g2);
    And(a=load, b=h1, out=h2);
    
    RAM8(in=in, load=a2, address = address[0..2], out=out1);
    RAM8(in=in, load=b2, address = address[0..2],out=out2);
    RAM8(in=in, load=c2, address = address[0..2],out=out3);
    RAM8(in=in, load=d2, address = address[0..2],out=out4);
    RAM8(in=in, load=e2, address = address[0..2],out=out5);
    RAM8(in=in, load=f2, address = address[0..2],out=out6);
    RAM8(in=in, load=g2, address = address[0..2],out=out7);
    RAM8(in=in, load=h2, address = address[0..2],out=out8);
		
		Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address[3..5], out=out);
    
    
}