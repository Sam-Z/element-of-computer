// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
 	  DMux4Way(in = true, sel=address[12..13], a=a1, b=b1, c=c1, d=d1);
    And(a=load, b=a1, out=a2);
    And(a=load, b=b1, out=b2);
    And(a=load, b=c1, out=c2);
    And(a=load, b=d1, out=d2);

    
    RAM4K(in=in, load=a2, address = address[0..11], out=out1);
    RAM4K(in=in, load=b2, address = address[0..11],out=out2);
    RAM4K(in=in, load=c2, address = address[0..11],out=out3);
    RAM4K(in=in, load=d2, address = address[0..11],out=out4);

		
		Mux4Way16(a=out1, b=out2, c=out3, d=out4, sel=address[12..13], out=out);
}